{"version":3,"sources":["script.js"],"names":["Comment","[object Object]","deleteButton","this","deleteComment","bind","addEventListener","addComment","event","input","target","newCommentText","value","tooltip","closest","list","querySelector","commentTemplate","document","content","innerText","comment","importNode","appendChild","ul","createElement","className","insertBefore","parentNode","childNodes","length","remove","CommentTooltip","button","handleKeyAction","showTooltip","tooltipTemplate","parent","parentElement","openedTooltip","classList","clone","contains","commentsTemplate","comments","querySelectorAll","forEach","focus","add","key","removeEventListener","removeChild","initCommentTooltips","readyState","Navigation","toggle","Popup","togglePopup","popup","backgroundOverlay","closePopupButton","editButton","Rating","toggleRatingTooltip","showRatingTooltip","hideRatingTooltip","setRange","setInputValue","changeRangeBackground","setRatingInTd","getPercents","open","showRatingTooltipButton","rating","min","max","column","ratingTooltip","ratingLine","parseInt","style","width","percents","dispatchEvent","CustomEvent","template","ratingInput","rangeInput","getAttribute","cell","current","ratingTemplate","ratingElement","blur","detail","backgroundImage","initRating","TableSave","save","saveButton","TableSummary","checkRatings","row","inputs","output","lastChild","range","result","Array","from","reduce","acc","innerHTML","toFixed","Toolbar","hoverIcons","hoverTimeLine","toolbarIcons","timeline","icon","currentTarget"],"mappings":"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","file":"script.js","sourcesContent":["class Comment {\n    constructor(deleteButton = null) {\n        if (deleteButton !== null) {\n            this.deleteButton = deleteButton;\n            this.deleteComment = this.deleteComment.bind(this);\n            this.deleteButton.addEventListener('click', () => this.deleteComment(deleteButton));\n        }\n        this.addComment = this.addComment.bind(this);\n    }\n\n    addComment(event) {\n        let input = event.target;\n        let newCommentText = input.value;\n        if (!newCommentText) return;\n        let tooltip = input.closest('.tasks-table__tooltip');\n        let list = tooltip.querySelector('.reviews');\n        let commentTemplate = document.querySelector('#comment');\n        commentTemplate.content.querySelector('.reviews__content').innerText = newCommentText;\n        const comment = document.importNode(commentTemplate.content, true);\n        if (list) { //there are some comments\n            list.appendChild(comment);\n        } else { //there are no comments, adding first comment\n            let ul = document.createElement('ul');\n            ul.className = 'reviews';\n            ul.appendChild(comment);\n            tooltip.insertBefore(ul, input);\n        }\n        new Comment(tooltip.querySelector('li:last-child .reviews__delete-button'));\n        input.value = '';\n    }\n\n    deleteComment(deleteButton) {\n        let comment = deleteButton.parentNode;\n        let list = comment.parentNode;\n        if (list.childNodes.length === 1) {\n            list.remove();\n            return;\n        }\n        comment.remove();\n    }\n}\n(function () {\n    class CommentTooltip {\n        constructor(button) {\n            this.button = button;\n            this.handleKeyAction = this.handleKeyAction.bind(this);\n            this.showTooltip = this.showTooltip.bind(this);\n            button.addEventListener('click', () => this.showTooltip(button));\n        }\n\n        showTooltip(button) {\n            let tooltipTemplate = document.querySelector('#add-comment-tooltip');\n            let parent = button.parentElement;\n            if (parent.querySelector('.tasks-table__tooltip') !== null) { // if tooltip already opened\n                return;\n            }\n            let openedTooltip = document.querySelector('.tasks-table__tooltip');\n            if(openedTooltip!==null){\n                openedTooltip.parentElement.querySelector('.tasks-table__comment-button')\n                    .classList.remove('tasks-table__comment-button--pressed');\n                openedTooltip.remove();\n            }\n\n            let clone = document.importNode(tooltipTemplate.content, true);\n            const input = clone.querySelector('.tasks-table__tooltip-input');\n            parent.appendChild(clone);\n            this.tooltip = input.parentNode;\n\n            if (button.classList.contains('tasks-table__comment-button--commented')) {\n                let commentsTemplate = document.querySelector('#comments-list');\n                const comments = document.importNode(commentsTemplate.content, true);\n                input.parentNode.insertBefore(comments,input);\n\n                const deleteCommentButtons = document.querySelectorAll('.reviews__delete-button');\n                deleteCommentButtons.forEach(deleteButton => {\n                    new Comment(deleteButton);\n                });\n            }\n\n\n            input.focus();\n            button.classList.add('tasks-table__comment-button--pressed');\n            document.addEventListener('keydown', this.handleKeyAction);\n        }\n\n        handleKeyAction(event) {\n            if (event.key === \"Escape\") {\n                document.removeEventListener('keydown', this.handleKeyAction);\n                this.tooltip.parentNode.removeChild(this.tooltip);\n                this.button.classList.remove('tasks-table__comment-button--pressed');\n            }else if(event.key === \"Enter\"){\n               new Comment().addComment(event);\n            }\n        }\n    }\n\n   function initCommentTooltips(){\n    const addCommentButtons = document.querySelectorAll('.tasks-table__comment-button');\n    addCommentButtons.forEach(button => {\n        new CommentTooltip(button);\n    });}\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", initCommentTooltips);\n    } else {\n        new initCommentTooltips();\n    }\n\n})();\n(function () {\n    class Navigation {\n        constructor() {\n            this.button = document.querySelector('.navigation__toggle-button');\n            this.list = document.querySelector('.navigation__list');\n            this.button.addEventListener('click', this.toggle.bind(this));\n        }\n\n        toggle() {\n            this.list.classList.toggle('navigation__list--open');\n        }\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", ()=>{new Navigation()});\n    } else {\n        new Navigation();\n    }\n\n})();\n(function () {\n    class Popup {\n        constructor() {\n            this.togglePopup = this.togglePopup.bind(this);\n\n            this.popup = document.querySelector('.popup');\n            if(this.popup===null){\n                return;\n            }\n            this.backgroundOverlay = document.querySelector('.popup__background-overlay');\n            this.closePopupButton = document.querySelector('.popup__close-button');\n            this.editButton = document.querySelector('.popup__edit-button');\n\n            this.closePopupButton.addEventListener('click',this.togglePopup);\n            this.editButton.addEventListener('click',this.togglePopup);\n            document.addEventListener('tableSave',this.togglePopup);\n\n        }\n\n        togglePopup(){\n            this.popup.classList.toggle('popup--opened');\n            this.backgroundOverlay.classList.toggle('popup__background-overlay--visible');\n        }\n\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", ()=>{new Popup()});\n    } else {\n        new Popup();\n    }\n})();\n(function () {\n    class Rating {\n        constructor(button) {\n            this.toggleRatingTooltip = this.toggleRatingTooltip.bind(this);\n            this.showRatingTooltip = this.showRatingTooltip.bind(this);\n            this.hideRatingTooltip = this.hideRatingTooltip.bind(this);\n            this.setRange = this.setRange.bind(this);\n            this.setInputValue = this.setInputValue.bind(this);\n            this.changeRangeBackground = this.changeRangeBackground.bind(this);\n            this.setRatingInTd = this.setRatingInTd.bind(this);\n            this.getPercents = this.getPercents.bind(this);\n\n            this.open = false;\n            this.showRatingTooltipButton = button;\n\n            this.showRatingTooltipButton.addEventListener('click', this.toggleRatingTooltip);\n\n            document.addEventListener('closepopups', () => {\n                if (this.open) this.hideRatingTooltip();\n            })\n        }\n\n\n        toggleRatingTooltip() {\n            if (this.open) {\n                this.hideRatingTooltip();\n            } else {\n                this.showRatingTooltip();\n            }\n        }\n\n        hideRatingTooltip() {\n            this.open = false;\n            const cell = this.showRatingTooltipButton.parentNode;\n            const current = cell.querySelector('.tasks-table__rating-tooltip');\n            //current.parentNode.removeChild(current);\n            current.remove();\n        }\n\n        getPercents(rating, min, max) {\n            return ((rating - min) * 100) / (max - min);\n        }\n\n        setRatingInTd(rating) {\n            const column = this.ratingTooltip.closest('.tasks-table__column');\n            column.querySelector('.tasks-table__rating').innerText = rating;\n            const ratingLine = column.querySelector('.tasks-table__progress span');\n            if (parseInt(rating) === 5) {\n                ratingLine.classList.add('tasks-table__progress--full');\n                ratingLine.style.width = '100%';\n            } else {\n                ratingLine.classList.remove('tasks-table__progress--full');\n                const percents = this.getPercents(rating, this.min, this.max);\n                ratingLine.style.width = `${percents}%`;\n            }\n        }\n\n        showRatingTooltip() {\n            document.dispatchEvent(new CustomEvent('closepopups'));\n            this.open = true;\n            let template = document.querySelector('#rating-tooltip');\n            const rating = document.importNode(template.content, true);\n            this.ratingTooltip = rating.querySelector('.tasks-table__rating-tooltip');\n            this.ratingInput = rating.querySelector('.tasks-table__input-rating');\n            this.rangeInput = rating.querySelector('.range');\n            this.min = this.rangeInput.getAttribute('min');\n            this.max = this.rangeInput.getAttribute('max');\n\n            const cell = this.showRatingTooltipButton.parentNode;\n            const current = cell.querySelector('.tasks-table__rating');\n            if (!current) {\n                cell.querySelector('.tasks-table__no-rated-text').remove();\n                let ratingTemplate = document.querySelector('#rating');\n                const ratingElement = document.importNode(ratingTemplate.content, true);\n                cell.appendChild(ratingElement);\n            }\n\n            this.rangeInput.value = current === null ? 3 : current.innerText;\n            this.ratingInput.value = this.rangeInput.value;\n            this.changeRangeBackground();\n            this.ratingInput.addEventListener('input', this.setRange);\n            this.rangeInput.addEventListener('input', this.setInputValue);\n            this.rangeInput.addEventListener('mouseup', () => {\n                this.rangeInput.blur();\n            });\n\n            cell.appendChild(rating);\n            document.dispatchEvent(new CustomEvent('ratingChanged', {\n                detail: this.showRatingTooltipButton,\n            }));\n        }\n\n        setRange(event) {\n            this.rangeInput.value = event.target.value; //set range value from input field\n            this.changeRangeBackground();\n            this.setRatingInTd(this.rangeInput.value);\n            document.dispatchEvent(new CustomEvent('ratingChanged', {\n                detail: this.rangeInput,\n            }));\n        }\n\n        setInputValue(event) {\n            this.ratingInput.value = event.target.value;  //set input value from range\n            this.changeRangeBackground();\n            this.setRatingInTd(this.ratingInput.value);\n            document.dispatchEvent(new CustomEvent('ratingChanged', {\n                detail: this.rangeInput,\n            }));\n        }\n\n        changeRangeBackground() {\n            const percents = this.getPercents(this.rangeInput.value, this.min, this.max);\n            this.rangeInput.style.backgroundImage = `linear-gradient(to right, #FFD200 0%, #FFD200 ${percents}%, #F0F0F0 ${percents}%, #F0F0F0 100%)`;\n        }\n    }\n\n    function initRating() {\n        const buttons = document.querySelectorAll('.tasks-table__rate-button');\n        buttons.forEach(button => {\n            new Rating(button);\n        })\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", initRating);\n    } else {\n        initRating();\n    }\n\n})();\n(function () {\n    class TableSave {\n        constructor() {\n            this.save = this.save.bind(this);\n\n            this.saveButton = document.querySelector('.tasks-table__save-button');\n            if(this.saveButton===null){\n                return;\n            }\n            this.saveButton.addEventListener('click', this.save);\n        }\n\n        save() {\n            document.dispatchEvent(new CustomEvent('tableSave'));\n            this.saveButton.blur();\n        }\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", ()=>{new TableSave()});\n    } else {\n        new TableSave();\n    }\n})();\n(function () {\n    class TableSummary {\n        constructor() {\n            this.checkRatings = this.checkRatings.bind(this);\n            document.addEventListener('ratingChanged', this.checkRatings);\n        }\n\n        getPercents(rating, min, max) {\n            return ((rating - min) * 100) / (max - min);\n        }\n\n        checkRatings(event) {\n            const row = event.detail.closest('.tasks-table__row');\n            const inputs = row.querySelectorAll('.tasks-table__column:not(:last-child) .tasks-table__rating');\n            if (inputs.length > 3) {\n                row.classList.add('tasks-table__row--full');\n\n                let output = row.lastChild.querySelector('.tasks-table__rating');\n                if (output === null) {\n                    let ratingTemplate = document.querySelector('#rating');\n                    const ratingElement = document.importNode(ratingTemplate.content, true);\n                    row.lastChild.appendChild(ratingElement);\n                    output = row.lastChild.querySelector('.tasks-table__rating');\n                }\n                const range = row.lastChild.querySelector('.tasks-table__progress span');\n                const summ = Array.from(inputs).reduce((acc, input) => {\n                    return acc + parseInt(input.innerHTML,10)\n                }, 0);\n                const result = summ/inputs.length;\n                output.innerHTML = result.toFixed(2);\n                if (parseInt(result,10) === 5) {\n                    range.classList.add('tasks-table__progress--full');\n                    range.style.width = '100%';\n                } else {\n                    range.classList.remove('tasks-table__progress--full');\n                    const percents = this.getPercents(result, 1, 5);\n                    range.style.width = `${percents}%`;\n                }\n            }\n        }\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", ()=>{new TableSummary()});\n    } else {\n        new TableSummary();\n    }\n\n})();\n(function () {\n    class Toolbar {\n        constructor() {\n            this.hoverIcons = this.hoverIcons.bind(this);\n            this.hoverTimeLine = this.hoverTimeLine.bind(this);\n            const toolbarIcons = document.querySelectorAll('.toolbar__icon-wrapper');\n            const timeline = document.querySelector('.time');\n            toolbarIcons.forEach(icon => icon.addEventListener('touchend', this.hoverIcons));\n            timeline.addEventListener('touchend',this.hoverTimeLine);\n        }\n\n        hoverIcons(event) {\n            event.currentTarget.classList.toggle('toolbar__icon-wrapper--opened');\n        }\n\n        hoverTimeLine(){\n            event.currentTarget.classList.toggle('time--touched');\n        }\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            new Toolbar()\n        });\n    } else {\n        new Toolbar();\n    }\n})();"]}