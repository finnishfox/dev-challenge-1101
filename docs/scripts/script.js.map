{"version":3,"sources":["script.js"],"names":["Comment","[object Object]","deleteButton","this","deleteComment","bind","addEventListener","addComment","event","input","target","newCommentText","value","tooltip","closest","list","querySelector","commentTemplate","document","content","innerText","comment","importNode","appendChild","ul","createElement","className","insertBefore","parentNode","childNodes","length","remove","CommentTooltip","button","handleKeyAction","showTooltip","closeTooltip","hideOnClickOutside","removeEventListener","tooltipTemplate","parent","parentElement","openedTooltip","classList","clone","contains","commentsTemplate","comments","querySelectorAll","forEach","focus","add","stopPropagation","preventDefault","removeChild","key","initCommentTooltips","readyState","Navigation","toggle","Popup","togglePopup","popup","backgroundOverlay","closePopupButton","editButton","Rating","toggleRatingTooltip","showRatingTooltip","hideRatingTooltip","setRange","setInputValue","changeRangeBackground","setRatingInTd","getPercents","open","showRatingTooltipButton","rating","min","max","column","ratingTooltip","ratingLine","parseInt","style","width","percents","dispatchEvent","CustomEvent","template","ratingInput","rangeInput","getAttribute","cell","current","ratingTemplate","ratingElement","blur","detail","backgroundImage","initRating","TableSave","save","saveButton","TableSummary","checkRatings","row","inputs","output","lastChild","range","result","Array","from","reduce","acc","innerHTML","toFixed","Toolbar","hoverIcons","hoverTimeLine","toolbarIcons","timeline","icon","currentTarget"],"mappings":"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","file":"script.js","sourcesContent":["class Comment {\n    constructor(deleteButton = null) {\n        if (deleteButton !== null) {\n            this.deleteButton = deleteButton;\n            this.deleteComment = this.deleteComment.bind(this);\n            this.deleteButton.addEventListener('click', () => this.deleteComment(deleteButton));\n        }\n        this.addComment = this.addComment.bind(this);\n    }\n\n    addComment(event) {\n        let input = event.target;\n        let newCommentText = input.value;\n        if (!newCommentText) return;\n        let tooltip = input.closest('.tasks-table__tooltip');\n        let list = tooltip.querySelector('.reviews');\n        let commentTemplate = document.querySelector('#comment');\n        commentTemplate.content.querySelector('.reviews__content').innerText = newCommentText;\n        const comment = document.importNode(commentTemplate.content, true);\n        if (list) { //there are some comments\n            list.appendChild(comment);\n        } else { //there are no comments, adding first comment\n            let ul = document.createElement('ul');\n            ul.className = 'reviews';\n            ul.appendChild(comment);\n            tooltip.insertBefore(ul, input);\n        }\n        new Comment(tooltip.querySelector('li:last-child .reviews__delete-button'));\n        input.value = '';\n    }\n\n    deleteComment(deleteButton) {\n        let comment = deleteButton.parentNode;\n        let list = comment.parentNode;\n        if (list.childNodes.length === 1) {\n            list.remove();\n            return;\n        }\n        comment.remove();\n    }\n}\n(function () {\n    class CommentTooltip {\n        constructor(button) {\n            this.button = button;\n            this.handleKeyAction = this.handleKeyAction.bind(this);\n            this.showTooltip = this.showTooltip.bind(this);\n            this.closeTooltip = this.closeTooltip.bind(this);\n            this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n            button.addEventListener('click', () => this.showTooltip(button));\n        }\n\n        hideOnClickOutside(event) {\n            const tooltip = event.target.closest('.tooltip');\n            if (tooltip === null) {\n                document.removeEventListener('click', this.hideOnClickOutside);\n                this.closeTooltip();\n            }\n        }\n\n\n        showTooltip(button) {\n            let tooltipTemplate = document.querySelector('#add-comment-tooltip');\n            let parent = button.parentElement;\n            if (parent.querySelector('.tasks-table__tooltip') !== null) { // if tooltip already opened\n                return;\n            }\n            let openedTooltip = document.querySelector('.tasks-table__tooltip');\n            if (openedTooltip !== null) {\n                openedTooltip.parentElement.querySelector('.tasks-table__comment-button')\n                    .classList.remove('tasks-table__comment-button--pressed');\n                openedTooltip.remove();\n            }\n\n            let clone = document.importNode(tooltipTemplate.content, true);\n            const input = clone.querySelector('.tasks-table__tooltip-input');\n            parent.appendChild(clone);\n            this.tooltip = input.parentNode;\n\n            if (button.classList.contains('tasks-table__comment-button--commented')) {\n                let commentsTemplate = document.querySelector('#comments-list');\n                const comments = document.importNode(commentsTemplate.content, true);\n                input.parentNode.insertBefore(comments, input);\n\n                const deleteCommentButtons = document.querySelectorAll('.reviews__delete-button');\n                deleteCommentButtons.forEach(deleteButton => {\n                    new Comment(deleteButton);\n                });\n            }\n\n\n            input.focus();\n            button.classList.add('tasks-table__comment-button--pressed');\n            document.addEventListener('keydown', this.handleKeyAction);\n            event.stopPropagation();\n            event.preventDefault();\n            document.addEventListener('click', this.hideOnClickOutside);\n        }\n\n        closeTooltip() {\n            this.tooltip.parentNode.removeChild(this.tooltip);\n            this.button.classList.remove('tasks-table__comment-button--pressed');\n        }\n\n        handleKeyAction(event) {\n            if (event.key === \"Escape\") {\n                document.removeEventListener('keydown', this.handleKeyAction);\n                this.closeTooltip();\n            } else if (event.key === \"Enter\") {\n                new Comment().addComment(event);\n            }\n        }\n    }\n\n    function initCommentTooltips() {\n        const addCommentButtons = document.querySelectorAll('.tasks-table__comment-button');\n        addCommentButtons.forEach(button => {\n            new CommentTooltip(button);\n        });\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", initCommentTooltips);\n    } else {\n        new initCommentTooltips();\n    }\n\n})();\n(function () {\n    class Navigation {\n        constructor() {\n            this.button = document.querySelector('.navigation__toggle-button');\n            this.list = document.querySelector('.navigation__list');\n            this.button.addEventListener('click', this.toggle.bind(this));\n        }\n\n        toggle() {\n            this.list.classList.toggle('navigation__list--open');\n        }\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", ()=>{new Navigation()});\n    } else {\n        new Navigation();\n    }\n\n})();\n(function () {\n    class Popup {\n        constructor() {\n            this.togglePopup = this.togglePopup.bind(this);\n\n            this.popup = document.querySelector('.popup');\n            if(this.popup===null){\n                return;\n            }\n            this.backgroundOverlay = document.querySelector('.popup__background-overlay');\n            this.closePopupButton = document.querySelector('.popup__close-button');\n            this.editButton = document.querySelector('.popup__edit-button');\n\n            this.closePopupButton.addEventListener('click',this.togglePopup);\n            this.editButton.addEventListener('click',this.togglePopup);\n            document.addEventListener('tableSave',this.togglePopup);\n\n        }\n\n        togglePopup(){\n            this.popup.classList.toggle('popup--opened');\n            this.backgroundOverlay.classList.toggle('popup__background-overlay--visible');\n        }\n\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", ()=>{new Popup()});\n    } else {\n        new Popup();\n    }\n})();\n(function () {\n    class Rating {\n        constructor(button) {\n            this.toggleRatingTooltip = this.toggleRatingTooltip.bind(this);\n            this.showRatingTooltip = this.showRatingTooltip.bind(this);\n            this.hideRatingTooltip = this.hideRatingTooltip.bind(this);\n            this.setRange = this.setRange.bind(this);\n            this.setInputValue = this.setInputValue.bind(this);\n            this.changeRangeBackground = this.changeRangeBackground.bind(this);\n            this.setRatingInTd = this.setRatingInTd.bind(this);\n            this.getPercents = this.getPercents.bind(this);\n\n            this.open = false;\n            this.showRatingTooltipButton = button;\n\n            this.showRatingTooltipButton.addEventListener('click', this.toggleRatingTooltip);\n\n            document.addEventListener('closepopups', () => {\n                if (this.open) this.hideRatingTooltip();\n            })\n        }\n\n\n        toggleRatingTooltip() {\n            if (this.open) {\n                this.hideRatingTooltip();\n            } else {\n                this.showRatingTooltip();\n            }\n        }\n\n        hideRatingTooltip() {\n            this.open = false;\n            const cell = this.showRatingTooltipButton.parentNode;\n            const current = cell.querySelector('.tasks-table__rating-tooltip');\n            //current.parentNode.removeChild(current);\n            current.remove();\n        }\n\n        getPercents(rating, min, max) {\n            return ((rating - min) * 100) / (max - min);\n        }\n\n        setRatingInTd(rating) {\n            const column = this.ratingTooltip.closest('.tasks-table__column');\n            column.querySelector('.tasks-table__rating').innerText = rating;\n            const ratingLine = column.querySelector('.tasks-table__progress span');\n            if (parseInt(rating) === 5) {\n                ratingLine.classList.add('tasks-table__progress--full');\n                ratingLine.style.width = '100%';\n            } else {\n                ratingLine.classList.remove('tasks-table__progress--full');\n                const percents = this.getPercents(rating, this.min, this.max);\n                ratingLine.style.width = `${percents}%`;\n            }\n        }\n\n        showRatingTooltip() {\n            document.dispatchEvent(new CustomEvent('closepopups'));\n            this.open = true;\n            let template = document.querySelector('#rating-tooltip');\n            const rating = document.importNode(template.content, true);\n            this.ratingTooltip = rating.querySelector('.tasks-table__rating-tooltip');\n            this.ratingInput = rating.querySelector('.tasks-table__input-rating');\n            this.rangeInput = rating.querySelector('.range');\n            this.min = this.rangeInput.getAttribute('min');\n            this.max = this.rangeInput.getAttribute('max');\n\n            const cell = this.showRatingTooltipButton.parentNode;\n            const current = cell.querySelector('.tasks-table__rating');\n            if (!current) {\n                cell.querySelector('.tasks-table__no-rated-text').remove();\n                let ratingTemplate = document.querySelector('#rating');\n                const ratingElement = document.importNode(ratingTemplate.content, true);\n                cell.appendChild(ratingElement);\n            }\n\n            this.rangeInput.value = current === null ? 3 : current.innerText;\n            this.ratingInput.value = this.rangeInput.value;\n            this.changeRangeBackground();\n            this.ratingInput.addEventListener('input', this.setRange);\n            this.rangeInput.addEventListener('input', this.setInputValue);\n            this.rangeInput.addEventListener('mouseup', () => {\n                this.rangeInput.blur();\n            });\n\n            cell.appendChild(rating);\n            document.dispatchEvent(new CustomEvent('ratingChanged', {\n                detail: this.showRatingTooltipButton,\n            }));\n        }\n\n        setRange(event) {\n            this.rangeInput.value = event.target.value; //set range value from input field\n            this.changeRangeBackground();\n            this.setRatingInTd(this.rangeInput.value);\n            document.dispatchEvent(new CustomEvent('ratingChanged', {\n                detail: this.rangeInput,\n            }));\n        }\n\n        setInputValue(event) {\n            this.ratingInput.value = event.target.value;  //set input value from range\n            this.changeRangeBackground();\n            this.setRatingInTd(this.ratingInput.value);\n            document.dispatchEvent(new CustomEvent('ratingChanged', {\n                detail: this.rangeInput,\n            }));\n        }\n\n        changeRangeBackground() {\n            const percents = this.getPercents(this.rangeInput.value, this.min, this.max);\n            this.rangeInput.style.backgroundImage = `linear-gradient(to right, #FFD200 0%, #FFD200 ${percents}%, #F0F0F0 ${percents}%, #F0F0F0 100%)`;\n        }\n    }\n\n    function initRating() {\n        const buttons = document.querySelectorAll('.tasks-table__rate-button');\n        buttons.forEach(button => {\n            new Rating(button);\n        })\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", initRating);\n    } else {\n        initRating();\n    }\n\n})();\n(function () {\n    class TableSave {\n        constructor() {\n            this.save = this.save.bind(this);\n\n            this.saveButton = document.querySelector('.tasks-table__save-button');\n            if(this.saveButton===null){\n                return;\n            }\n            this.saveButton.addEventListener('click', this.save);\n        }\n\n        save() {\n            document.dispatchEvent(new CustomEvent('tableSave'));\n            this.saveButton.blur();\n        }\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", ()=>{new TableSave()});\n    } else {\n        new TableSave();\n    }\n})();\n(function () {\n    class TableSummary {\n        constructor() {\n            this.checkRatings = this.checkRatings.bind(this);\n            document.addEventListener('ratingChanged', this.checkRatings);\n        }\n\n        getPercents(rating, min, max) {\n            return ((rating - min) * 100) / (max - min);\n        }\n\n        checkRatings(event) {\n            const row = event.detail.closest('.tasks-table__row');\n            const inputs = row.querySelectorAll('.tasks-table__column:not(:last-child) .tasks-table__rating');\n            if (inputs.length > 3) {\n                row.classList.add('tasks-table__row--full');\n\n                let output = row.lastChild.querySelector('.tasks-table__rating');\n                if (output === null) {\n                    let ratingTemplate = document.querySelector('#rating');\n                    const ratingElement = document.importNode(ratingTemplate.content, true);\n                    row.lastChild.appendChild(ratingElement);\n                    output = row.lastChild.querySelector('.tasks-table__rating');\n                }\n                const range = row.lastChild.querySelector('.tasks-table__progress span');\n                const summ = Array.from(inputs).reduce((acc, input) => {\n                    return acc + parseInt(input.innerHTML,10)\n                }, 0);\n                const result = summ/inputs.length;\n                output.innerHTML = result.toFixed(2);\n                if (parseInt(result,10) === 5) {\n                    range.classList.add('tasks-table__progress--full');\n                    range.style.width = '100%';\n                } else {\n                    range.classList.remove('tasks-table__progress--full');\n                    const percents = this.getPercents(result, 1, 5);\n                    range.style.width = `${percents}%`;\n                }\n            }\n        }\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", ()=>{new TableSummary()});\n    } else {\n        new TableSummary();\n    }\n\n})();\n(function () {\n    class Toolbar {\n        constructor() {\n            this.hoverIcons = this.hoverIcons.bind(this);\n            this.hoverTimeLine = this.hoverTimeLine.bind(this);\n            const toolbarIcons = document.querySelectorAll('.toolbar__icon-wrapper');\n            const timeline = document.querySelector('.time');\n            toolbarIcons.forEach(icon => icon.addEventListener('touchend', this.hoverIcons));\n            timeline.addEventListener('touchend',this.hoverTimeLine);\n        }\n\n        hoverIcons(event) {\n            event.currentTarget.classList.toggle('toolbar__icon-wrapper--opened');\n        }\n\n        hoverTimeLine(){\n            event.currentTarget.classList.toggle('time--touched');\n        }\n    }\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            new Toolbar()\n        });\n    } else {\n        new Toolbar();\n    }\n})();"]}